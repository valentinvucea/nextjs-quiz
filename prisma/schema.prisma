generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id      Int      @id @default(autoincrement())
  email   String   @unique
  name    String?
  active  Boolean  @default(true)
  profile Profile?
  results Result[]

  @@map("user")
}

model Profile {
  id     Int     @id @default(autoincrement())
  bio    String?
  userId Int     @unique
  user   User    @relation(fields: [userId], references: [id])

  @@map("profile")
}

model Quiz {
  id         Int            @id @default(autoincrement())
  title      String
  categoryId Int
  passScore  Int            @default(80)
  active     Boolean        @default(true)
  questions  QuizQuestion[]
  results    Result[]

  @@map("quiz")
}

model Question {
  id          Int            @id @default(autoincrement())
  text        String
  categoryId  Int            @default(1)
  answers     Answer[]
  quizzes     QuizQuestion[]
  module      String?
  explanation String?

  @@map("question")
}

model QuizQuestion {
  quizId     Int
  questionId Int
  Question   Question @relation(fields: [questionId], references: [id])
  Quiz       Quiz     @relation(fields: [quizId], references: [id])

  @@id([quizId, questionId])
  @@map("quiz_question")
}

model Answer {
  id         Int      @id @default(autoincrement())
  text       String
  isCorrect  Boolean
  questionId Int
  question   Question @relation(fields: [questionId], references: [id])

  @@map("answer")
}

model Result {
  id               Int      @id @default(autoincrement())
  userId           Int
  quizId           Int
  score            Int
  questionsCount   Int
  incorrectAnswers Json
  startedAt        DateTime @default(now())
  duration         Int
  quiz             Quiz     @relation(fields: [quizId], references: [id])
  user             User     @relation(fields: [userId], references: [id])

  @@map("result")
}
